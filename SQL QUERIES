Here are the list of questions and I performed SQL queries to answer those question.

-------------------------------------------------------------------------------------------------------------------------------------------------------
--Q1. WHO IS THE SENIOR EMPLOYEE BASED ON JOB TITLE/LEVEL

SELECT * FROM EMPLOYEE
ORDER BY LEVELS DESC 
LIMIT 1;


-------------------------------------------------------------------------------------------------------------------------------------------------------
--Q2. Which countries have the most Invoices?

SELECT COUNT(*) AS NUM, BILLING_COUNTRY FROM INVOICE
GROUP BY BILLING_COUNTRY 
ORDER BY NUM DESC 
LIMIT 10;


-------------------------------------------------------------------------------------------------------------------------------------------------------
--Q3. WHAT ARE TOP 3 VALUES OF TOTAL INVOICE

SELECT TOTAL FROM INVOICE
ORDER BY TOTAL DESC
LIMIT 3;


-------------------------------------------------------------------------------------------------------------------------------------------------------
/* Q4. Write a query that returns one city that has the 
   highest sum of invoice totals. Return both the city
   name & sum of all invoice totals  */

SELECT BILLING_CITY, SUM(TOTAL) AS INVOICE_TOTAL FROM INVOICE
GROUP BY BILLING_CITY
ORDER BY INVOICE_TOTAL DESC
LIMIT 5;


-------------------------------------------------------------------------------------------------------------------------------------------------------
/*Q5.  Who is the best customer? The customer who has spent the 
most money will be declared the best customer. Write a query
that returns the person who has spent the most money */

SELECT C.CUSTOMER_ID, C.FIRST_NAME, C.LAST_NAME,SUM(I.TOTAL) AS TOTAL
FROM CUSTOMER AS C
JOIN INVOICE AS I
ON C.CUSTOMER_ID= I.CUSTOMER_ID
GROUP BY C.CUSTOMER_ID
ORDER BY TOTAL DESC
LIMIT 1;


-------------------------------------------------------------------------------------------------------------------------------------------------------
/* Q6: Write query to return the email, first name, last name, & 
Genre of all Rock Music listeners. Return your list ordered 
alphabetically by email starting with A. */


SELECT DISTINCT email,first_name, last_name, genre.name 
FROM customer
JOIN invoice ON invoice.customer_id = customer.customer_id
JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
JOIN track ON track.track_id = invoice_line.track_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
ORDER BY email
LIMIT 5;


-------------------------------------------------------------------------------------------------------------------------------------------------------
/* Q7: Let's invite the artists who have written the most rock 
  music in our dataset.Write a query that returns the Artist name 
  and total track count of the top 10 rock bands. */
   
SELECT artist.artist_id, artist.name,COUNT(artist.artist_id) AS number_of_songs
FROM track
JOIN album ON album.album_id = track.album_id
JOIN artist ON artist.artist_id = album.artist_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY artist.artist_id
ORDER BY number_of_songs DESC
LIMIT 10;


-------------------------------------------------------------------------------------------------------------------------------------------------------
/* Q8: Return all the track names that have a song 
length longer than the average song length.Return 
the Name and Milliseconds for each track. Order by 
the song length with the longest songs listed first.*/

SELECT NAME, MILLISECONDS FROM TRACK
WHERE MILLISECONDS >
	(SELECT AVG(MILLISECONDS) FROM TRACK)
ORDER BY MILLISECONDS DESC;



-------------------------------------------------------------------------------------------------------------------------------------------------------
/* Q9: Find how much amount spent by each customer on artists? Write a query 
to return customer name,artist name and total spent */
--CTE TO FIND artist_id,artist_name, total sales from invoice_line i.e quantity * price

WITH best_selling AS ( 
	SELECT a.artist_id, a.name, 
	SUM(i.unit_price*i.quantity)
	FROM artist AS a
	JOIN album AS al ON al.artist_id= a.artist_id
	JOIN track AS t ON t.album_id= al.album_id
	JOIN invoice_line AS i ON i.track_id=t.track_id
	GROUP BY 1 
	ORDER BY 3 DESC
	LIMIT 1
	)

SELECT c.customer_id,c.first_name,c.last_name,bs.name,
SUM(i.quantity*i.unit_price)
FROM customer AS c 
JOIN invoice AS inv ON inv.customer_id=c.customer_id
JOIN invoice_line AS i ON i.invoice_id=inv.invoice_id
JOIN track AS t ON t.track_id = i.track_id
JOIN album AS al ON al.album_id = t.album_id
JOIN best_selling AS bs ON bs.artist_id = al.artist_id
GROUP BY 1,2,3,4
ORDER BY 5 DESC;


-------------------------------------------------------------------------------------------------------------------------------------------------------













-------------------------------------------------------------------------------------------------------------------------------------------------------
